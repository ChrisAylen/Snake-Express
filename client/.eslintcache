[{"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\index.js":"1","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\reportWebVitals.js":"2","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\App.js":"3","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Snake.js":"4","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Home.js":"5","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\SingleThought.js":"6","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Profile.js":"7","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Signup.js":"8","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Login.js":"9","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\Footer\\index.js":"10","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\Header\\index.js":"11","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\utils\\queries.js":"12","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\utils\\mutations.js":"13","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\utils\\auth.js":"14","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\Snake\\SnakeGame.jsx":"15","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\ThoughtList\\index.js":"16","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\Snake\\GameOver.jsx":"17","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\ThoughtForm\\index.js":"18","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\CommentForm\\index.js":"19","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\CommentList\\index.js":"20"},{"size":517,"mtime":1660680233567,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1660680233575,"results":"23","hashOfConfig":"22"},{"size":2570,"mtime":1660682269046,"results":"24","hashOfConfig":"22"},{"size":462,"mtime":1660682269051,"results":"25","hashOfConfig":"22"},{"size":944,"mtime":1660680233567,"results":"26","hashOfConfig":"22"},{"size":1620,"mtime":1660680233573,"results":"27","hashOfConfig":"22"},{"size":1790,"mtime":1660680233570,"results":"28","hashOfConfig":"22"},{"size":2758,"mtime":1660680233571,"results":"29","hashOfConfig":"22"},{"size":2597,"mtime":1660680233569,"results":"30","hashOfConfig":"22"},{"size":878,"mtime":1660680233560,"results":"31","hashOfConfig":"22"},{"size":1493,"mtime":1660728110298,"results":"32","hashOfConfig":"22"},{"size":968,"mtime":1660680233578,"results":"33","hashOfConfig":"22"},{"size":1133,"mtime":1660680233577,"results":"34","hashOfConfig":"22"},{"size":1084,"mtime":1660680233576,"results":"35","hashOfConfig":"22"},{"size":11366,"mtime":1660682269050,"results":"36","hashOfConfig":"22"},{"size":1556,"mtime":1660680233565,"results":"37","hashOfConfig":"22"},{"size":646,"mtime":1660682269048,"results":"38","hashOfConfig":"22"},{"size":3193,"mtime":1660680233563,"results":"39","hashOfConfig":"22"},{"size":2498,"mtime":1660680233556,"results":"40","hashOfConfig":"22"},{"size":989,"mtime":1660680233558,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"aspck2",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\index.js",[],["86","87"],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\reportWebVitals.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\App.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Snake.js",["88","89"],"import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport SnakeGame from '../components/Snake/SnakeGame';\r\n\r\nimport { QUERY_THOUGHTS } from '../utils/queries';\r\n\r\nconst Home = () => {\r\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\r\n  const thoughts = data?.thoughts || [];\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <SnakeGame />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Home.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Profile.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Signup.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\pages\\Login.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\utils\\queries.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\utils\\mutations.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\utils\\auth.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\Snake\\SnakeGame.jsx",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\Snake\\GameOver.jsx",[],"C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\ThoughtForm\\index.js",["90"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_THOUGHT } from '../../utils/mutations';\r\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst ThoughtForm = () => {\r\n  const [thoughtText, setThoughtText] = useState('');\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\r\n    update(cache, { data: { addThought } }) {\r\n      try {\r\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_THOUGHTS,\r\n          data: { thoughts: [addThought, ...thoughts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addThought({\r\n        variables: {\r\n          thoughtText,\r\n          thoughtAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setThoughtText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'thoughtText' && value.length <= 280) {\r\n      setThoughtText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>What's on your techy mind?</h3>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"thoughtText\"\r\n                placeholder=\"Here's a new thought...\"\r\n                value={thoughtText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Thought\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtForm;\r\n","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\CommentForm\\index.js",["91"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst CommentForm = ({ thoughtId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: {\r\n          thoughtId,\r\n          commentText,\r\n          commentAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>What are your thoughts on this thought?</h4>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n            {error && <span className=\"ml-2\">{error.message}</span>}\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"commentText\"\r\n                placeholder=\"Add your comment...\"\r\n                value={commentText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Comment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","C:\\Users\\chris\\coding_bootcamp\\Activities\\Snake-Express\\client\\src\\components\\CommentList\\index.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":9,"column":11,"nodeType":"98","messageId":"99","endLine":9,"endColumn":18},{"ruleId":"96","severity":1,"message":"100","line":10,"column":9,"nodeType":"98","messageId":"99","endLine":10,"endColumn":17},{"ruleId":"96","severity":1,"message":"101","line":41,"column":15,"nodeType":"98","messageId":"99","endLine":41,"endColumn":19},{"ruleId":"96","severity":1,"message":"101","line":19,"column":15,"nodeType":"98","messageId":"99","endLine":19,"endColumn":19},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'thoughts' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]